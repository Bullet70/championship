plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

def environment = hasProperty('env') ? env : 'local'

ext.extProgram = new Properties()
def extFile = file("etc/$environment/specific.properties");
if(extFile.canRead()) {
	extProgram.load(extFile.newReader())
}

eclipse {
	project {
		name = "ChampionshipBE"
	}
	wtp {
		component {
			contextPath = "championship"
			resource deployPath: '/', sourcePath: 'webapp'
		}
		facet {
			facet name: 'jst.web', version: '3.1'
		}
	}
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
	mavenCentral()
}

war {
	baseName "championship"
}

sourceSets {
	main {
		resources {
			srcDir "etc/$environment"
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  	compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.7.1'
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	compile group: 'org.postgresql', name: 'postgresql', version: '9.4-1206-jdbc42'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
  
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.0'
	testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.0'
	testRuntime group: 'org.springframework', name: 'spring-test', version: '5.1.5.RELEASE'
}

test {
//useJUnitPlatform()
  testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}